provider "aws" {
  region = "us-east-1"
}

provider "cloudflare" {
  version = "1.20.0"
}

variable "domain_name" {
  type = string
}

resource "aws_s3_bucket" "static_website" {
  bucket = "${var.domain_name}"
  acl    = "public-read"

  website {
    index_document = "index.html"
    error_document = "error.html"
  }
}

resource "aws_s3_bucket_policy" "static_website" {
  bucket = aws_s3_bucket.static_website.id

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "PublicReadGetObject",
      "Effect": "Allow",
      "Principal": "*",
      "Action": "s3:GetObject",
      "Resource": "arn:aws:s3:::${var.domain_name}/*"
    }
  ]
}
EOF
}

resource "aws_acm_certificate" "cert" {
  domain_name       = "${var.domain_name}"
  validation_method = "DNS"
}

resource "aws_cloudfront_distribution" "static_website" {
  origin {
    domain_name = "${aws_s3_bucket.static_website.website_endpoint}"
    origin_id   = "S3-${var.domain_name}"
  }

  default_cache_behavior {
    allowed_methods  = ["GET", "HEAD"]
    cached_methods   = ["GET", "HEAD"]
    target_origin_id = "S3-${var.domain_name}"

    viewer_protocol_policy = "redirect-to-https"
    min_ttl               = 0
    default_ttl           = 3600
    max_ttl               = 86400
  }

  viewer_certificate {
    acm_certificate_arn = "${aws_acm_certificate.cert.arn}"
    ssl_support_method = "sni-only"
  }

  aliases = ["${var.domain_name}"]
}

resource "cloudflare_record" "cname_record" {
  domain = "${var.domain_name}"
  name   = "www"
  value  = "${aws_cloudfront_distribution.static_website.domain_name}"
  type   = "CNAME"
  ttl    = "1"
}
